# Description: check SSL cert info
# Usage:  certinfo <host>
certinfo() {
	echo "" | \
	openssl s_client -host $1 -port 443  2>/dev/null | \
	openssl x509 -noout -issuer -subject -dates
	}

# Description: detects if a parameter is in $PATH and executable
# Usage: detectex <executable>
# Credit: https://stackoverflow.com/questions/15771773/how-to-define-a-die-shell-function
detectex() {
	local EX=$1
	if [[ -x `which $EX` ]] ; then
		return 0;
	else
		echo "$EX not executable or not in PATH";
		return 1;
	fi
	}

# Description: expand a shortened URL
# Usage: expandurl <url>
# Credit: http://pthree.org/2011/10/18/use-wget1-to-expand-shortened-urls/
expandurl() { wget -S $1 2>&1 | grep ^Location; }


# Description: find which partition a file resides
# Usage: findpart <filename>
findpart() { [ -e "$1" ] && df -P "$1" | awk '/^\// {print $1}' || echo "$1 not found"; }


# Description: flip a table
# Usage: fliptable
# Credit: inspired by @climagic
fliptable() {
	echo "";
	echo "FUCK IT!（╯°□°）╯ ┻━┻";
	}

# Description: extract files from any archive
# Usage: ex <filename>
# Credit: bodhi.zazen
function ex ()
{
if [ -f "$1" ] ; then
case "$1" in
*.tar) tar xvf $1 ;;
*.tar.bz2 | *.tbz2 ) tar xjvf $1 ;;
*.tar.gz | *.tgz ) tar xzvf $1 ;;
*.bz2) bunzip2 $1 ;;
*.rar) unrar x $1 ;;
*.gz) gunzip $1 ;;
*.zip) unzip $1 ;;
*.Z) uncompress $1 ;;
*.7z) 7z x $1 ;;
*.xz) tar xJvf $1 ;;
*.deb)
DIR=${1%%_*.deb}
ar xv $1
mkdir ${DIR}
tar -C ${DIR} -xzvf data.tar.gz
;;
*.rpm) rpm2cpio $1 | cpio -vid ;;
*) echo ""${1}" cannot be extracted via extract()" ;;
esac
else
echo ""${1}" is not a valid file"
fi
}

# Description: mount iso image
# Usage: isomount <image>
isomount() {
	isotmp=`mktemp -d --tmpdir` && \
	[ -e "$1" ] && \
	sudo mount -t iso9660 -o loop $1 $isotmp && \
	df -H $isotmp || \
	echo "error mounting iso image $1";
	}

# Description: determines vendor of a IEEE standard MAC address
# Usage: macgrep <MAC address>
macgrep() (
	set -e
	detectex nmap
	local MAC=/usr/share/nmap/nmap-mac-prefixes
	echo -n ""
	grep -i `echo $1 | \
		sed -e 's/[:-]//g' | \
		cut -c 1-6` \
		$MAC || \
	echo "MAC address not found or database not available"
	)

# Description: generates a random IEEE standard MAC address
# Usage: macrand
macrand () (
	set -e
	detectex nmap
	local MAC=/usr/share/nmap/nmap-mac-prefixes
	echo -n ""
	grep -v ^# $MAC | \
	awk '{ print $1 }' | \
	sed 's/^\(..\)\(..\)\(..\).*$/\1:\2:\3/' | \
	shuf -n 1 | tr A-Z a-z | tr '\n' ':' ;
	dd if=/dev/urandom count=1 2>/dev/null | \
	md5sum | \
	sed 's/^\(..\)\(..\)\(..\).*$/\1:\2:\3/'
	)

# Description: lists files in an LXC guest
# Usage: lxc-guest-ls -n <container name> -d <directory>
lxc-guest-ls () {
	while getopts n:d: opt
		do case $opt in
			n) local CONTAINER="$OPTARG";;
			d) local DIR="$OPTARG";;
		esac
	done
	sudo ls /var/lib/lxc/$CONTAINER/rootfs/$DIR
	}

# Description: clear MBR on a device
# Usage: zerombr <device>
#zerombr() { [ -e "$1" ] && dd if=/dev/zero of=$1 bs=512 count=1 || echo "error clearing MBR for $1"; }
